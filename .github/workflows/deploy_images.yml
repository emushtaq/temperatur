name: CI to Docker Hub

on:
  push:
    tags:
      - "v*.*.*"

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2
        
      - name: Cache Docker FE layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-fe-cache
          key: ${{ runner.os }}-buildx-fe-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-fe-
            
      - name: Cache Docker BE layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-be-cache
          key: ${{ runner.os }}-buildx-be-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-be-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push backend
        id: docker_build_backend
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/temperatur-backend:latest
          cache-from: type=local,src=/tmp/.buildx-be-cache
          cache-to: type=local,dest=/tmp/.buildx-be-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
      - name: Build and push frontend
        id: docker_build_frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/temperatur-frontend:latest
          cache-from: type=local,src=/tmp/.buildx-fe-cache
          cache-to: type=local,dest=/tmp/.buildx-fe-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
